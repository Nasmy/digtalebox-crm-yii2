<?php

namespace app\components;

use app\models\BitlyProfile;
use app\models\Configuration;
use app\models\LnProfile;
use app\models\McProfile;
use app\models\TwProfile;
use app\models\User;
use yii\base\Widget;
use Yii;

class SocialAuths extends Widget
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function run($isLogin = false)
    {
        $Profiles = array();
        $isPolitician = false;
        $hasTwProfile = false;
        $hasFbProfile = false;
        $hasLnProfile = false;
        $hasGpProfile = false;
        $hasBlyProfile = false;
        $hasIgProfile = false;
        $hasMcProfile = false;
        $config = new Configuration();
        $dbConfig = $config->getConfigurations();

        $modelClient = User::findOne(['userType' => User::POLITICIAN, 'id' => User::PARTNER_USER_ID]);
        if (is_null($modelClient)) {
            Yii::$app->appLog->writeLog("Client profile not found for Social Auth");
        }

        if (User::POLITICIAN == Yii::$app->user->identity->userType) {
            $isPolitician = true; //only politician user can connect to social accounts.
            $modelClient = User::findOne(['userType' => User::POLITICIAN, 'id' => Yii::$app->user->identity->id]);
        }


        // TODO Commented line in feature we might need;
        /*$hasGpProfile = null != GpProfile::model()->findByAttributes(array('userId' => $modelClient->id))? true : false;
        $Profiles['Google +'] = GpProfile::model()->findByAttributes(array('userId' => $modelClient->id));*/
        /*
          $hasBlyProfile = null != BitlyProfile::findAll(array('userId' => $modelClient['id'])) ? true : false;
          $Profiles['Bitly'] = BitlyProfile::findAll(array('userId' => $modelClient['id']));
        */
        $hasMcProfile = null != McProfile::findAll(['userId' => $modelClient['id']]) ? true : false;
        $Profiles['MailChimp'] = McProfile::findAll(['userId' => $modelClient['id']]);

        /*   $hasIgProfile = null != IgProfile::model()->findByAttributes(array('userId' => $modelClient->id))? true : false;
        if (null != FbProfile::model()->findByAttributes(array('userId' => $modelClient->id)) && $dbConfig['FB_ACCESS_TOKEN_UPDATED'] == 'true') {
            $hasFbProfile = true;
            $Profiles['Facebook'] = FbProfile::model()->findByAttributes(array('userId' => $modelClient->id));
        }*/


        if (null != LnProfile::find()->where(['userId' => $modelClient['id']])->one() && $dbConfig['LN_ACCESS_TOKEN_UPDATED'] == 'true') {
            $hasLnProfile = true;
            $Profiles['LinkedIn'] = LnProfile::find()->where(['userId' => $modelClient['id']])->one();
        }

        if (null != TwProfile::find()->where(['userId' => $modelClient['id']])->one() && $dbConfig['TW_ACCESS_TOKEN_UPDATED'] == 'true') {
            $hasTwProfile = true;
            $Profiles['Twitter'] = TwProfile::find()->where(['userId' => $modelClient['id']])->one();
        }

        $msg = Yii::t('messages', 'You have not authenticated with social networks.Please authenticate with them now.');

        if ($hasLnProfile) {
            if (LnProfile::isTokenExpired($modelClient['id']) || $dbConfig['LN_ACCESS_TOKEN_UPDATED'] == 'false') {
                $msg = Yii::t('messages', 'Please re authenticate with social networks.');
                $hasLnProfile = false;
            }
        }

        /* if ($dbConfig['FB_ACCESS_TOKEN_UPDATED'] == 'false') {
             $msg = Yii::t('messages', 'Please re authenticate with social networks.');
         }*/

        // When user first access the system need to launch the site guide
        $isSiteGuideViewed = true;

        if (Yii::$app->user->checkAccess('Dashboard.Dashboard') && $isLogin) {
            if (App::FREEMIUM_PLAN_TYPE == Yii::$app->user->getState('packageType')) {
                // Redirects freemium user directly to broadcasting page
                return $this->redirect(array('/broadcast-message/admin', 'isSiteGuideViewed' => $isSiteGuideViewed));
            }
            if ($isPolitician) {
                if ($hasTwProfile && $hasFbProfile && $hasLnProfile && $hasGpProfile) {
                    return $this->redirect(array('/dashboard/dashboard'));
                } else {
                    // Redirects to index page
                    Yii::$app->session->setFlash('info', $msg);
                }
            } else {
                return $this->redirect(array('/dashboard/dashboard'));
            }
        }

        $configFormModel = new Configuration();
        $cmodel = Configuration::find()->where('`key` = :key', [':key' => 'FB_PAGE'])->select('value')->one();

        if ($cmodel->value == "") {
            $userP = "";
            $userPset = false;
        } else {
            $userP = "";
            $userPset = false;
            $modelClientUser = User::findAll(array('userType' => User::POLITICIAN), array('condition' => 'id != :id', 'params' => array(':id' => User::PARTNER_USER_ID)));
            /* $modelFbProf = FbProfile::findAll(array('userId' => $modelClientUser->id));
             if($modelFbProf){
                 Yii::$app->facebook->setAccessToken($modelFbProf->accessToken);
                 $userP = Yii::$app->facebook->getFbPage($cmodel->value); //not working without access token
                 $userPset = true;
             }*/
        }

        $clnModel = Configuration::find()->where('`key` = :key', [':key' => 'LN_PAGE'])->select('value')->one();
        if ($clnModel->value == "") {
            $userLnP = "";
            $userLnPset = false;
        } else {
            $userLnP = array("name" => $clnModel->value);
            $userLnPset = true;
        }


        return $this->render('_logins', array(
            'isPolitician' => $isPolitician,
            'isSiteGuideViewed' => $isSiteGuideViewed,
            'hasTwProfile' => $hasTwProfile,
            //'hasFbProfile' => $hasFbProfile,
            'hasLnProfile' => $hasLnProfile,
            //'hasGpProfile' => $hasGpProfile,
            'hasBlyProfile' => $hasBlyProfile,
            //'hasIgProfile' => $hasIgProfile,
            'hasMcProfile' => $hasMcProfile,
            'Profiles' => $Profiles,
            'userP' => $userP,
            'userPset' => $userPset,
            'userLnP' => $userLnP,
            'userLnPset' => $userLnPset,
            'configFormModel' => $configFormModel,
            'userId' => $modelClient['id'],
        ));
    }
}
